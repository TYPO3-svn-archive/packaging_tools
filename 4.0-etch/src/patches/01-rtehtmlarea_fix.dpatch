#!/bin/sh /usr/share/dpatch/dpatch-run
## 01-rtehtmlarea_fix.dpatch by Christian Welzel <gawain@camlann.de>
##
## DP: fix a security-vulnerability in rtehtmlarea system extension

@DPATCH@

diff -Naur typo3_src-4.0.3/typo3/sysext/rtehtmlarea/htmlarea/plugins/SpellChecker/spell-check-logic.php typo3_src-4.0.4/typo3/sysext/rtehtmlarea/htmlarea/plugins/SpellChecker/spell-check-logic.php
--- typo3_src-4.0.3/typo3/sysext/rtehtmlarea/htmlarea/plugins/SpellChecker/spell-check-logic.php	2006-12-05 01:35:48.000000000 +0100
+++ typo3_src-4.0.4/typo3/sysext/rtehtmlarea/htmlarea/plugins/SpellChecker/spell-check-logic.php	2006-12-20 13:38:21.000000000 +0100
@@ -84,6 +84,37 @@
 	$GLOBALS['TSFE']->tmpl->getFileName_backPath = PATH_site;
 	$GLOBALS['TSFE']->forceTemplateParsing = 1;
 	$GLOBALS['TSFE']->getConfigArray();
+
+	// *********
+	// initialize a BE_USER if applicable
+	// *********
+	$BE_USER='';
+	if ($_COOKIE['be_typo_user'])	{	// If the backend cookie is set, we proceed and checks if a backend user is logged in.
+		$TYPO3_MISC['microtime_BE_USER_start'] = microtime();
+		$TT->push('Back End user initialized','');
+		require_once (PATH_t3lib.'class.t3lib_befunc.php');
+		require_once (PATH_t3lib.'class.t3lib_userauthgroup.php');
+		require_once (PATH_t3lib.'class.t3lib_beuserauth.php');
+		require_once (PATH_t3lib.'class.t3lib_tsfebeuserauth.php');
+
+			// the value this->formfield_status is set to empty in order to disable login-attempts to the backend account through this script
+		$BE_USER = t3lib_div::makeInstance('t3lib_tsfeBeUserAuth');	// New backend user object
+		$BE_USER->OS = TYPO3_OS;
+		$BE_USER->lockIP = $TYPO3_CONF_VARS['BE']['lockIP'];
+		$BE_USER->start();	// Object is initialized
+		$BE_USER->unpack_uc('');
+		if ($BE_USER->user['uid'])	{
+			$BE_USER->fetchGroupData();
+			$TSFE->beUserLogin = 1;
+		}
+			// Now we need to do some additional checks for IP/SSL
+		if (!$BE_USER->checkLockToIP() || !$BE_USER->checkBackendAccessSettingsFromInitPhp())	{
+				// Unset the user initialization.
+			$BE_USER='';
+			$TSFE->beUserLogin=0;
+		}
+	}
+
 	$spellChecker = t3lib_div::makeInstance('tx_rtehtmlarea_pi1');
 	$spellChecker->cObj = t3lib_div::makeInstance('tslib_cObj');
 	$conf = $GLOBALS['TSFE']->tmpl->setup['plugin.'][$spellChecker->prefixId.'.'];
diff -Naur typo3_src-4.0.3/typo3/sysext/rtehtmlarea/pi1/class.tx_rtehtmlarea_pi1.php typo3_src-4.0.4/typo3/sysext/rtehtmlarea/pi1/class.tx_rtehtmlarea_pi1.php
--- typo3_src-4.0.3/typo3/sysext/rtehtmlarea/pi1/class.tx_rtehtmlarea_pi1.php	2006-12-05 01:35:48.000000000 +0100
+++ typo3_src-4.0.4/typo3/sysext/rtehtmlarea/pi1/class.tx_rtehtmlarea_pi1.php	2006-12-20 13:38:21.000000000 +0100
@@ -142,6 +142,8 @@
 
 			// Setting the pspell suggestion mode
 		$this->pspellMode = t3lib_div::_POST('pspell_mode')?t3lib_div::_POST('pspell_mode'): $this->pspellMode;
+			// Now sanitize $this->pspellMode
+		$this->pspellMode = t3lib_div::inList('ultra,fast,normal,bad-spellers',$this->pspellMode)?$this->pspellMode:'normal';
 		switch($this->pspellMode) {
 			case 'ultra':
 			case 'fast':
@@ -165,21 +167,24 @@
 		if($this->pspell_is_available && !$this->forceCommandMode) {
 			$this->pspell_link = pspell_new($this->dictionary, '', '', $this->parserCharset, $pspellModeFlag);
 		}
		
 			// Setting the path to user personal dicts, if any
-		if (t3lib_div::_POST('enablePersonalDicts') == 'true') {
-			$this->userUid = t3lib_div::_POST('userUid');
+		if (t3lib_div::_POST('enablePersonalDicts') == 'true' && $GLOBALS['TSFE']->beUserLogin)	{
+			$this->userUid = 'BE_' . $GLOBALS['BE_USER']->user['uid'];
 			if ($this->userUid) {
 				$this->personalDictPath = t3lib_div::getFileAbsFileName($this->uploadFolder . $this->userUid);
 				if (!is_dir($this->personalDictPath)) {
 					t3lib_div::mkdir($this->personalDictPath);
 				}
-				$this->personalDictsArg = ' --home-dir=' . $this->personalDictPath;
+					// escape here for later use
+				$this->personalDictsArg = ' --home-dir=' . escapeshellarg($this->personalDictPath);
 			}
 		}
		
 		$cmd = t3lib_div::_POST('cmd');
 		if ($cmd == 'learn' && !$safe_mode_is_enabled) {
+				// Only availble for BE_USERS, die silently if someone has gotten here by accident
+			if(!$GLOBALS['TSFE']->beUserLogin) die('');
 				// Updating the personal word list
 			$to_p_dict = t3lib_div::_POST('to_p_dict');
 			$to_p_dict = $to_p_dict ? $to_p_dict : array();
@@ -205,7 +210,8 @@
 					echo $cmd;
 					fwrite($filehandle, $cmd, strlen($cmd));
 					fclose($filehandle);
-					$AspellCommand = 'cat ' . $tmpFileName . ' | ' . $this->AspellDirectory . ' -a --mode=none' . $this->personalDictsArg . ' --lang=' .$this->dictionary . ' --encoding=' . $this->parserCharset . ' 2>&1';
+						// $this->personalDictsArg has already been escapeshellarg()'ed above, it is an optional paramter and might be empty here
+					$AspellCommand = 'cat ' . escapeshellarg($tmpFileName) . ' | ' . $this->AspellDirectory . ' -a --mode=none' . $this->personalDictsArg . ' --lang=' . escapeshellarg($this->dictionary) . ' --encoding=' . escapeshellarg($this->parserCharset) . ' 2>&1';
 					print $AspellCommand . "\n";
 					print shell_exec($AspellCommand);
 					t3lib_div::unlink_tempfile($tmpFileName);
@@ -362,7 +368,7 @@
 					if(!$filehandle = fopen($tmpFileName,'wb')) echo('SpellChecker tempfile open error');
 					if(!fwrite($filehandle, $word)) echo('SpellChecker tempfile write error');
 					if(!fclose($filehandle)) echo('SpellChecker tempfile close error');
-					$AspellCommand = 'cat ' . $tmpFileName . ' | ' . $this->AspellDirectory . ' -a check --mode=none --sug-mode=' . $this->pspellMode . $this->personalDictsArg . ' --lang=' .$this->dictionary . ' --encoding=' . $this->parserCharset . ' 2>&1';
+					$AspellCommand = 'cat ' . escapeshellarg($tmpFileName) . ' | ' . $this->AspellDirectory . ' -a check --mode=none --sug-mode=' . escapeshellarg($this->pspellMode) . $this->personalDictsArg . ' --lang=' . escapeshellarg($this->dictionary) . ' --encoding=' . escapeshellarg($this->parserCharset) . ' 2>&1';
 					$AspellAnswer = shell_exec($AspellCommand);
 					$AspellResultLines = array();
 					$AspellResultLines = t3lib_div::trimExplode(chr(10), $AspellAnswer, 1);
